---
- name: Install Docker
  hosts: all
  become: true
  tasks:
    - name: Install prerequisites
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Add Docker's official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker's official apt repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb['codename'] }} stable
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Docker CE
      apt:
        name: docker-ce
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Add user permissions
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Reset ssh connection for changes to take effect
      meta: reset_connection

    - name: Install Python package manager
      apt:
        name: python3-pip

    - name: Install Python SDK
      pip:
        name:
          - docker
          - docker-compose

    - name: Check if /opt/ansible directory exists
      stat: 
        path: /opt/ansible
      register: dir_status
      
    - name: Create /opt/ansible directory if it does not exist
      file:
        path: /opt/ansible
        state: directory
        mode: '0755'
      when: not dir_status.stat.exists
      
    - name: Check if /opt/ansible/portainer_data directory exists
      stat: 
        path: /opt/ansible/portainer_data
      register: portainer_data_dir_status
      
    - name: Create /opt/ansible/portainer_data directory if it does not exist
      file:
        path: /opt/ansible/portainer_data
        state: directory
        mode: '0755'
      when: not portainer_data_dir_status.stat.exists

    - name: Create docker-compose.yaml
      copy:
        dest: "/opt/ansible/docker-compose.yaml"
        content: |
          version: '3.3'
          services:
            portainer:
              image: portainer/portainer-ce
              restart: always
              ports:
                - 9000:9000
              volumes:
                - /var/run/docker.sock:/var/run/docker.sock
                - /opt/ansible/portainer_data:/data

    - name: Start Docker Compose
      command: docker-compose -f /opt/ansible/docker-compose.yaml up -d
